{
  "swagger": "2.0",
  "info": {
    "description": "Docs for API",
    "version": "0.0.1",
    "title": "API Routes"
  },
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [],
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "paths": {
    "/token": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Login",
        "operationId": "token-create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "required": true
                },
                "password": {
                  "type": "string",
                  "required": true
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "role": {
                      "type": "number"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "billingAddress": {
                      "type": "string"
                    },
                    "ein": {
                      "type": "string"
                    },
                    "gender": {
                      "type": "string",
                      "enum": [
                        "male",
                        "female"
                      ],
                      "example": "male"
                    },
                    "isApproved": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "number"
                    }
                  }
                },
                "token":{
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "hash": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "description": "Email is not verified, but send",
            "$ref": "#/responses/Forbidden"
          },
          "412": {
            "description": "Precondition failed. Email is verified but need to fill up user data. Use this verifyToken and another data to create user",
            "schema": {
              "type": "object",
              "properties": {
                "verifyToken": {
                  "type": "string"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "role": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Token"
        ],
        "summary": "Logout",
        "operationId": "token-delete",
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/responses/Success"
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/token/request": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Sign up request",
        "description": "# **Description:** Saves email, password hash and user role. \nPlease note that same email will cause duplicate error. \nRequest token has only **14 day lifetime**",
        "operationId": "token-request",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "required": true
                },
                "password": {
                  "type": "string",
                  "required": true
                },
                "role": {
                  "type": "number",
                  "description": "Valid roles: business(**2**), nonProfit(**3**), donor(**4**)",
                  "required": true
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/Success"
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "409": {
            "$ref": "#/responses/DuplicateRecourse"
          }
        }
      }
    },
    "/token/request/resend/{email}": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Resend request token",
        "description": "# **Description:** Create new and delete old request",
        "operationId": "token-request-resend",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/Success"
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "404": {
            "description": "Must be in requests but don't confirm",
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/token/request/confirm": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Sign up request confirmation",
        "description": "# **Description:** Mark request as email confirmed",
        "operationId": "token-request-confirm",
        "parameters": [
          {
            "in": "header",
            "name": "x-confirm-token",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "role": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "description": "# **Description:** Creates new user. Available roles to create: **[ 2, 3, 4 ]**. \nBesides default required field, there are some required filed for each role: \n **business** - companyName, address; \n **nonProfit** - companyName, address, billingAddress, ein; \n **donor** - firstName, lastName, gender; ",
        "operationId": "user-create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "required": true
                },
                "role": {
                  "type": "number",
                  "required": true
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "gender": {
                  "type": "string",
                  "enum": [
                    "male",
                    "female"
                  ],
                  "example": "male"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "role": {
                      "type": "number"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "billingAddress": {
                      "type": "string"
                    },
                    "ein": {
                      "type": "string"
                    },
                    "gender": {
                      "type": "string",
                      "enum": [
                        "male",
                        "female"
                      ],
                      "example": "male"
                    },
                    "isApproved": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "number"
                    }
                  }
                },
                "token":{
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "hash": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          }
        }
      }
    },
    "/user/change-password": {
      "patch": {
        "tags": [
          "User Password"
        ],
        "summary": "Change user password",
        "description": "# **Description:** Available only for current user(auth) or admin ",
        "operationId": "user-password-change",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "required": true
                },
                "newPassword": {
                  "type": "string",
                  "required": true
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/Success"
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/user/change-email": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Change user email",
        "description": "# **Description:** Available only for current user(auth) or admin ",
        "operationId": "user-email-change",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "required": true
                },
                "password": {
                  "type": "string",
                  "required": true
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/Success"
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by id",
        "operationId": "user-get",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "firstName": {
                  "description": "**Donor**",
                  "type": "string"
                },
                "lastName": {
                  "description": "**Donor**",
                  "type": "string"
                },
                "birthDate": {
                  "type": "number"
                },
                "companyName": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "ein": {
                  "type": "string"
                },
                "billingAddress": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "avatar": {
                  "type": "string"
                },
                "isApproved": {
                  "type": "boolean"
                },
                "role": {
                  "type": "number"
                },
                "followsCount": {
                  "type": "number"
                },
                "followingCount": {
                  "type": "number"
                },
                "isFollower": {
                  "type": "boolean"
                },
                "isFollowing": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user",
        "operationId": "user-update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "companyName": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "birthDate": {
                  "type": "number"
                },
                "billingAddress": {
                  "type": "string"
                },
                "ein": {
                  "type": "string"
                },
                "gender": {
                  "type": "string",
                  "enum": [
                    "male",
                    "female"
                  ],
                  "example": "male"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/Success"
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user",
        "operationId": "user-delete",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/responses/Success"
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/user/{id}/avatar": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Upload user avatar",
        "description": "# **Description:** Valid MimeTypes: **jpeg**, **jpg**, **png** ",
        "operationId": "user-avatar-upload",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "avatar",
            "type": "file"
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/responses/Success"
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/user/reset-password/{email}": {
      "post": {
        "tags": [
          "User Password"
        ],
        "summary": "Reset password request",
        "description": "# **Description:** Returns password reset token. \nPlease note that old request **will be removed** for this user. \nRequest token has only **1 day lifetime**",
        "operationId": "reset-user-password-request",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "User email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/Success"
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/user/new-password/{passwordResetToken}": {
      "post": {
        "tags": [
          "User Password"
        ],
        "summary": "Reset password",
        "operationId": "reset-user-password",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "passwordResetToken",
            "in": "path",
            "description": "User passwordReset Token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "required": true
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/responses/Success"
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    }
  },
  "responses": {
    "ValidationError": {
      "type": "object",
      "description": "Validation error",
      "properties": {
        "error": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "property": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Success": {
      "type": "object",
      "description": "Accepted",
      "properties": {
      }
    },
    "NotFound": {
      "type": "object",
      "description": "Not Found",
      "properties": {
        "error": {
          "properties": {
            "message": {
              "type": "string"
            }
          }
        }
      }
    },
    "Forbidden": {
      "type": "object",
      "description": "Access Denied",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        }
      }
    },
    "Unauthorized": {
      "type": "object",
      "description": "Unauthorized",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        }
      }
    },
    "DuplicateRecourse": {
      "type": "object",
      "description": "Unauthorized",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Roles": {
      "properties": {
        "0": {
          "type": "string",
          "description": "`admin`"
        },
        "1": {
          "type": "string",
          "description": "`default`"
        },
        "2": {
          "type": "string",
          "description": "`business`"
        },
        "3": {
          "type": "string",
          "description": "`nonProfit`"
        },
        "4": {
          "type": "string",
          "description": "`donor`"
        },
        "5": {
          "type": "string",
          "description": "`student`"
        },
        "6": {
          "type": "string",
          "description": "`subAccount`"
        }
      }
    },
    "User": {
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "description": "**Donor**",
          "type": "string"
        },
        "lastName": {
          "description": "**Donor**",
          "type": "string"
        },
        "birthDate": {
          "type": "number"
        },
        "companyName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "billingAddress": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "isApproved": {
          "type": "boolean"
        },
        "role": {
          "type": "number"
        },
        "createdAt": {
          "type": "number"
        }
      }
    }
  }
}
